[0m[[0m[0mdebug[0m] [0m[0m> Exec(early(addDefaultCommands), None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(addDefaultCommands, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(early(initialize), None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(initialize, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(boot, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(writeSbtVersion, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(reload, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(sbtStashOnFailure, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(onFailure loadFailed, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(loadp, None, None)[0m[0J
[0m[[0m[0minfo[0m] [0m[0mwelcome to sbt 1.4.1 (Oracle Corporation Java 1.8.0_262)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mLoad.defaultLoad until apply took 670.058364ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: plugins took 145.268487ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: defsScala took 0.379871ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Scanning directory /root/machineLearningWithSpark/chapter04/project[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Found non-root projects [0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /root/machineLearningWithSpark/chapter04/project, returning: ()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 33.034533 ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m              Load.resolveProject(chapter04-build) took 55.274911ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m            Load.loadTransitive: finalizeProject(Project(id chapter04-build, base: /root/machineLearningWithSpark/chapter04/project, plugins: List(<none>))) took 420.518781ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /root/machineLearningWithSpark/chapter04/project, returning: (chapter04-build)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: loadedProjectsRaw took 464.351416ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: cleanEvalClasses took 0.305118ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m        Load.loadUnit(file:/root/machineLearningWithSpark/chapter04/project/, ...) took 616.987272ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: load took 814.218112ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: resolveProjects took 7.878914ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: finalTransforms took 79.977607ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: config.delegates took 9.630843ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: Def.make(settings)... took 802.576291ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: structureIndex took 145.574573ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: mkStreams took 2.359606ms[0m[0J
[0m[[0m[0minfo[0m] [0m[0mloading project definition from /root/machineLearningWithSpark/chapter04/project[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: plugins took 3257.018156ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: defsScala took 0.004634ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Scanning directory /root/machineLearningWithSpark/chapter04[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadUnit: mkEval took 11.426459ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Found non-root projects [0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /root/machineLearningWithSpark/chapter04, returning: ()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 2.217104 ms[0m[0J
[0m[[0m[0minfo[0m] [0m[0mloading settings for project chapter04 from build.sbt ...[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m        Load.resolveProject(chapter04) took 15.842318ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadTransitive: finalizeProject(Project(id chapter04, base: /root/machineLearningWithSpark/chapter04, plugins: List(<none>))) took 18.614412ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /root/machineLearningWithSpark/chapter04, returning: (chapter04)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: loadedProjectsRaw took 157.079551ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: cleanEvalClasses took 5.637124ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m  Load.loadUnit(file:/root/machineLearningWithSpark/chapter04/, ...) took 3421.183075ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: load took 3448.339061ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: resolveProjects took 0.122079ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: finalTransforms took 20.48432ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: config.delegates took 0.44526ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: Def.make(settings)... took 197.004257ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: structureIndex took 88.71694ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: mkStreams took 0.004347ms[0m[0J
[0m[[0m[0minfo[0m] [0m[0mset current project to chapter04 (in build file:/root/machineLearningWithSpark/chapter04/)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(sbtPopOnFailure, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(resumeFromFailure, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(notifyUsersAboutShell, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(iflast shell, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(package, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mEvaluating tasks: Compile / package[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m[0J
[0m[[0m[0minfo[0m] [0m[0mcompiling 1 Scala source to /root/machineLearningWithSpark/chapter04/target/scala-2.11/classes ...[0m[0J
